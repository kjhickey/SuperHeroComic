@page "/comicbrand/{id:int}"
@inject ISuperHeroService SuperHeroService
@inject NavigationManager NavigationManager

<PageTitle>@comic?.Name</PageTitle>

<h3>@comic?.Name</h3>

<table class="table">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Hero Name</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var hero in SuperHeroService.Heroes)
        {
            if (!IsVisible(hero))
                continue;
            <tr>
                <td>@hero.FirstName</td>
                <td>@hero.LastName</td>
                <td>@hero.HeroName</td>
                <td>
                    <button class="btn btn=primary" @onclick="(() => ShowHero(hero.Id))"><i class="oi oi-pencil"></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>
<button class="btn btn-primary" @onclick="CreateNewHero">Create New Hero</button>

@code {

    [Parameter]
    public int Id { get; set; }

    CleanBlazorWASM.Shared.Comic comic = null;

    protected override async Task OnInitializedAsync()
    {
        
    }

    protected override async Task OnParametersSetAsync()
    {
        
        comic = await SuperHeroService.GetSingleComic((int)Id);
        await SuperHeroService.GetSuperHeroesByComic(Id);
        
    }

    public string Filter { get; set; }

    public bool IsVisible(Superhero hero)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;
 
        if (hero.FirstName.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;

        if (hero.LastName.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;

        if (hero.HeroName.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
 
       if (hero.Comic!.Name.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
 
        return false;
    }

    void ShowHero(int id)
    {
        NavigationManager.NavigateTo($"hero/{id}");
    }

    void CreateNewHero()
    {
        NavigationManager.NavigateTo("/hero");
    }
}
