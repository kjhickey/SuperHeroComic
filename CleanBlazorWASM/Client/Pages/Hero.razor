@page "/hero"
@page "/hero/{id:int}"
@using CleanBlazorWASM.Client.Services.MovieApiService
@inject ISuperHeroService SuperHeroService
@inject IMovieApiService MovieApiService

@if (Id == null)
{
    <PageTitle>Create a new Super Hero</PageTitle>
    <h3>Create a new Super Hero</h3>
}
else
{
    <PageTitle>Edit @hero.HeroName</PageTitle>
    <h3>Edit @hero.HeroName</h3>
}

<EditForm Model="@hero" OnSubmit="@HandleSubmit">
    <div>
        <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value="hero.FirstName" class="form-control"></InputText>
    </div>
    <div>
        <label for="lastname">Last Name</label>
        <InputText id="lastname" @bind-Value="hero.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label for="heroname">Hero Name</label>
        <InputText id="heroname" @bind-Value="hero.HeroName" class="form-control"></InputText>
    </div>
    <div>
        <label>Comic</label><br />
        <InputSelect @bind-Value="hero.ComicId" class="form-selecet">
            @foreach (var comic in SuperHeroService.Comics)
            {
                <option value="@comic.Id">@comic.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteHero">Delete Hero</button>

</EditForm>

@if (movieApiResponse != null)
{
    <h4>Movies</h4>
    <table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Release Date</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var movie in movieApiResponse.Results.OrderByDescending(x => x.ReleaseDate))
            {
                <tr>
                    <td>@movie.Title</td>
                    <td>@movie.ReleaseDate</td>
                </tr>
            }
        </tbody>
</table>
}

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;
    MovieApiResponse movieApiResponse;

    Superhero hero = new Superhero { Comic = new CleanBlazorWASM.Shared.Comic() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Hero" : "Update Hero";
        await SuperHeroService.GetComics();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            hero.Comic = SuperHeroService.Comics[0];
            hero.ComicId = hero.Comic.Id;
        }
        else
        {
            hero = await SuperHeroService.GetSingleHero((int)Id);
            movieApiResponse = await MovieApiService.MovieSearch(hero.HeroName);
        }
    }

    async void HandleSubmit()
    {
        if(Id == null)
        {
            await SuperHeroService.CreateHero(hero); 
        }
        else
        {
            await SuperHeroService.UpdateHero(hero);
        }
    }

    async Task DeleteHero()
    {
        await SuperHeroService.DeleteHero(hero.Id);
    }

}
